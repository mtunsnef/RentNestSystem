@using RentNest.Core.Enums
@using RentNest.Core.Utils
@model RentNest.Web.Models.AccommodationDetailViewModel
@{
    ViewData["Title"] = "Chi tiết phòng thuê";
}

@{
    var addressParts = new List<string?> {
        Model.Address,
        Model.WardName,
        Model.DistrictName,
        Model.ProvinceName
    };
    var fullAddress = string.Join(", ", addressParts.Where(p => !string.IsNullOrWhiteSpace(p)));
    var encodedAddress = System.Net.WebUtility.UrlEncode(fullAddress);
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

@functions {
    public string GetTimeAgo(DateTime? dateTime)
    {
        if (dateTime == null) return "";
        var timeSpan = DateTime.Now - dateTime.Value;
        if (timeSpan.TotalMinutes < 60)
            return $"{(int)timeSpan.TotalMinutes} phút trước";
        if (timeSpan.TotalHours < 24)
            return $"{(int)timeSpan.TotalHours} giờ trước";
        return $"{(int)timeSpan.TotalDays} ngày trước";
    }
}
<section style="margin-top: 9rem">
    <div class="container">
        <div class="row no-gutters align-items-end justify-content-start">
            <div class="col-md-9 ftco-animate pb-4">
                <p class="breadcrumbs">
                    <span class="mr-2">
                        <a href="/trang-chu">
                            Trang chủ <i class="ion-ios-arrow-forward"></i>
                        </a>
                    </span>
                    <span class="mr-2">
                        <a href="/danh-sach-phong-tro">
                            Danh sách các phòng <i class="ion-ios-arrow-forward"></i>
                        </a>
                    </span>
                    <span>
                        Chi tiết phòng <i class="ion-ios-arrow-forward"></i>
                    </span>
                </p>
            </div>
        </div>
    </div>
</section>

<section class="ftco-services-2">
    <div class="container">
        <div class="row">
            <div class="col-md-12 property-wrap mb-5">
                <div class="row">
                    <!-- Swiper Slider -->
                    <div class="col-md-6">
                        <!-- Ảnh chính -->
                        <div class="swiper mySwiper2 mb-2">
                            @if (Model.PackageTypeName != PackageType.Normal.GetDisplayName())
                            {
                                <span id="packageBadgeVIP"
                                      class="badge position-absolute @BadgeHelper.GetBadgeClass(Model?.PackageTypeName!)"
                                      style="color: #fff; top: 8px; left: 8px; font-size: 15px; padding: 8px; z-index: 1000">
                                    @Model?.PackageTypeName
                                </span>
                            }

                            <div class="swiper-wrapper">
                                @foreach (var img in Model?.ImageUrls ?? Enumerable.Empty<string>())
                                {
                                    <div class="swiper-slide">
                                        <img src="@img" class="img-fluid rounded main-img" />
                                    </div>
                                }
                            </div>

                        </div>
                        <!-- Ảnh nhỏ thumbnail -->
                        <div class="swiper mySwiperThumbs">
                            <div class="swiper-wrapper">
                                @foreach (var img in Model?.ImageUrls ?? Enumerable.Empty<string>())
                                {
                                    <div class="swiper-slide">
                                        <img style="width: 100%" src="@img" class="img-fluid thumb-img" />
                                    </div>
                                }
                            </div>
                            <div class="swiper-button-next"></div>
                            <div class="swiper-button-prev"></div>
                        </div>
                    </div>

                    <!-- Thông tin phòng -->
                    <div class="col-md-6 py-4">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h3 class="mb-0" style="word-break: break-word;"><a href="#">@Model?.PostTitle</a></h3>
                            <div class="d-flex align-items-center">
                                <button class="btn btn-light border favorite-btn" data-post-id="@Model?.PostId">
                                    <i class="fas fa-heart" id="heart-@Model?.PostId"></i>
                                </button>
                            </div>
                        </div>
                        <span style="font-size: 135% !important" class="badge text-danger p-0">
                            @(((@Model?.Price ??
                                0) / 1_000_000M).ToString("0.#").Replace('.', ',')) triệu / tháng
                        </span>

                        <p class="my-3">@Model?.Description</p>

                        <div class="d-flex align-items-center my-3">
                            <img src="@Model?.AccountImg" class="rounded-circle" style="width: 50px; height: 50px;">
                            <div class="ml-3">
                                <strong>@Model?.AccountName</strong><br>
                                <small>Đăng @GetTimeAgo(Model?.CreatedAt) • Phản hồi: 100%</small>
                            </div>
                        </div>
                        @{
                            var phone = Model?.AccountPhone ?? "";
                            var maskedPhone = phone.Substring(0, phone.Length - 3) + "xxx";
                        }

                        <div class="d-flex align-items-center mb-3">
                            <button class="btn btn-success mr-3" onclick="showFullPhone('@phone')" id="phoneBtn">
                                <i class="fa fa-phone"></i> @maskedPhone
                            </button>
                            <button class="btn btn-outline-secondary d-none mr-3" id="copyBtn"
                                    onclick="copyPhone('@phone')">
                                <i class="fa fa-copy"></i> Sao chép
                            </button>
                            <a href="/bat-dau-tro-chuyen?postId=@Model?.PostId&receiverId=@Model?.AccountId" class="btn btn-outline-primary">
                                <i class="fa fa-comment"></i> Chat
                            </a>
                        </div>

                        <small class="text-success d-none" id="copyMsg">Đã sao chép</small>
                    </div>
                </div>
            </div>

            <div class="col-md-12 tour-wrap">
                <div class="mb-4">
                    <h5 class="font-weight-bold mb-3">Địa chỉ</h5>
                    <p>@fullAddress</p>
                </div>
                <div class="mb-4">
                    <h5 class="font-weight-bold mb-3">Thông tin mô tả</h5>
                    <p>@Html.Raw(Model?.PostContent?.Replace("\n", "<br>"))</p>
                </div>
                <div class="mb-4">
                    <h5 class="font-weight-bold mb-3">Đặc điểm</h5>
                    <table class="table table-bordered">
                        <tbody>
                            @if (Model?.BedroomCount > 0)
                            {
                                <tr>
                                    <th scope="row">Số phòng ngủ</th>
                                    <td>@Model?.BedroomCount giường</td>
                                </tr>
                            }

                            @if (Model?.BathroomCount > 0)
                            {
                                <tr>
                                    <th scope="row">Số phòng tắm</th>
                                    <td>@Model?.BathroomCount phòng tắm</td>
                                </tr>
                            }

                            @if (!string.IsNullOrWhiteSpace(Model?.FurnitureStatus))
                            {
                                <tr>
                                    <th scope="row">Tình trạng nội thất</th>
                                    <td>@Model?.FurnitureStatus</td>
                                </tr>
                            }

                            @if (Model != null && Model.UpdatedAt.HasValue)
                            {
                                <tr>
                                    <th scope="row">Cập nhật lần cuối</th>
                                    <td>@Model.UpdatedAt.Value.ToString("dd/MM/yyyy")</td>
                                </tr>
                            }

                            @if (Model?.HasKitchenCabinet == true || Model?.HasAirConditioner == true || Model?.HasRefrigerator == true || Model?.HasWashingMachine == true || Model?.HasLoft == true)
                            {
                                <tr>
                                    <th scope="row">Nổi bật</th>
                                    <td>
                                        <ul class="mb-0 pl-3">
                                            @if (Model?.HasKitchenCabinet == true)
                                            {
                                                <li>Tủ bếp</li>
                                            }
                                            @if (Model?.HasAirConditioner == true)
                                            {
                                                <li>Máy lạnh</li>
                                            }
                                            @if (Model?.HasRefrigerator == true)
                                            {
                                                <li>Tủ lạnh</li>
                                            }
                                            @if (Model?.HasWashingMachine == true)
                                            {
                                                <li>Máy giặt</li>
                                            }
                                            @if (Model?.HasLoft == true)
                                            {
                                                <li>Gác lửng</li>
                                            }
                                        </ul>
                                    </td>
                                </tr>
                            }

                            @if (Model?.Amenities != null)
                            {
                                <tr>
                                    <th scope="row">Tiện ích</th>
                                    <td>
                                        <ul class="mb-0 pl-3">
                                            @foreach (var item in Model.Amenities)
                                            {
                                                <li>@item</li>
                                            }
                                        </ul>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="mb-4">
                    <h5 class="font-weight-bold mb-3">Vị trí</h5>
                    <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
                        <iframe style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;"
                                loading="lazy" allowfullscreen
                                src="https://maps.google.com/maps?q=@encodedAddress&z=14&output=embed">
                        </iframe>
                    </div>
                </div>

            </div>
            <div class="col-md-12 tour-wrap">
                <div class="pt-5 mt-5">
                    <h3 class="mb-5">Bình luận</h3>

                    @if (Model.Comments == null || !Model.Comments.Any())
                    {
                        <div class="alert alert-info">Chưa có bình luận nào. Hãy là người đầu tiên để lại ý kiến!</div>
                    }
                    else
                    {
                        <ul class="comment-list">
                            @foreach (var c in Model.Comments)
                            {
                                <li class="comment" data-comment-id="@c.CommentId">
                                    <div class="vcard bio">
                                        <img src="@c.AccountAvatarUrl" alt="User avatar" />
                                    </div>
                                    <div class="comment-body">
                                        <h6>@c.AccountName</h6>
                                        <div class="meta">Ngày @c.CreatedAt?.ToString("dd/MM/yyyy 'lúc' hh:mm tt")</div>
                                        <p>@c.Content</p>
                                        <p><a href="#" class="reply" data-parent="@c.CommentId">Trả lời</a></p>
                                    </div>

                                    @if (c.Replies?.Count > 0)
                                    {
                                        <ul class="children">
                                            @foreach (var r in c.Replies)
                                            {
                                                <li class="comment">
                                                    <div class="vcard bio">
                                                        <img src="@r.AccountAvatarUrl" alt="User avatar" />
                                                    </div>
                                                    <div class="comment-body">
                                                        <h3>@r.AccountName</h3>
                                                        <div class="meta">Ngày @r.CreatedAt?.ToString("dd/MM/yyyy 'lúc' hh:mm tt")</div>
                                                        <p>@r.Content</p>
                                                    </div>
                                                </li>
                                            }
                                        </ul>
                                    }
                                </li>
                            }
                        </ul>
                    }

                    <!-- END comment-list -->
                    <div class="comment-form-wrap pt-5">
                        <h3 class="mb-4">Để lại bình luận</h3>
                        <form id="comment-form" class="p-4 bg-light rounded shadow-sm">
                            <input type="hidden" id="postId" value="@Model.PostId" />
                            <input type="hidden" id="parentCommentId" name="parentCommentId" />
                            <div class="form-group mb-3">
                                <label for="message" class="fw-bold">Nội dung bình luận *</label>
                                <textarea id="message" cols="30" rows="5" class="form-control"
                                          placeholder="Nhập nội dung bình luận..."></textarea>
                            </div>
                            <div class="form-group">
                                <button type="submit" class="btn btn-primary py-2 px-4">Gửi bình luận</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section> <!-- .section -->
<div id="custom-toast" class="custom-toast"></div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>

<script>
    var thumbSwiper = new Swiper(".mySwiperThumbs", {
        spaceBetween: 0,
        slidesPerView: 8,
        freeMode: true,
        watchSlidesProgress: true,
        navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev"
        },
    });

    var mainSwiper = new Swiper(".mySwiper2", {
        spaceBetween: 10,
        loop: true,
        autoplay: {
            delay: 3000,
            disableOnInteraction: false,
        },
        thumbs: {
            swiper: thumbSwiper,
        },
    });

    document.querySelectorAll('.mySwiperThumbs .swiper-slide img').forEach(function (img, index) {
        img.addEventListener('mouseenter', function () {
            mainSwiper.slideToLoop(index);
        });
    });

    function showFullPhone(fullPhone) {
        const phoneBtn = document.getElementById("phoneBtn");
        const copyBtn = document.getElementById("copyBtn");

        phoneBtn.innerHTML = '<i class="fa fa-phone"></i> ' + fullPhone;
        phoneBtn.classList.remove("btn-success");
        phoneBtn.classList.add("btn-outline-success");

        copyBtn.classList.remove("d-none");
    }

    function copyPhone(fullPhone) {
        navigator.clipboard.writeText(fullPhone).then(() => {
            const msg = document.getElementById("copyMsg");
            msg.classList.remove("d-none");
            setTimeout(() => msg.classList.add("d-none"), 2000);
        });
    }

    const isAuthenticated = @(User.Identity.IsAuthenticated.ToString().ToLower());

    //comment
    function appendCommentToUI(c) {
        const html = `
            <li class="comment" data-comment-id="${c.commentId}">
                <div class="vcard bio">
                    <img src="${c.accountAvatarUrl}" alt="User avatar" />
                </div>
                <div class="comment-body">
                    <h6>${c.accountName}</h6>
                    <div class="meta">Ngày ${formatDateTime(c.createdAt)}</div>
                    <p>${escapeHtml(c.content)}</p>
                    <p><a href="#" class="reply" data-parent="${c.commentId}">Trả lời</a></p>
                </div>
            </li>
        `;

        if (c.parentCommentId) {
            const parentLi = $(`[data-comment-id='${c.parentCommentId}']`);
            let childrenUl = parentLi.find('ul.children');
            if (childrenUl.length === 0) {
                childrenUl = $('<ul class="children"></ul>').appendTo(parentLi);
            }
            childrenUl.append(html);
        } else {
            $('.comment-list').append(html);
        }
    }

    function escapeHtml(text) {
        return $('<div>').text(text).html();
    }

    function formatDateTime(dateStr) {
        const date = new Date(dateStr);
        return date.toLocaleDateString('vi-VN') + ' lúc ' + date.toLocaleTimeString('vi-VN');
    }


    $('#comment-form').on('submit', function (e) {
        e.preventDefault();

        if (!isAuthenticated) {
            window.location.href = '/auth/login';
            return;
        }

        const postId = $('#postId').val();
        const parentCommentId = $('#parentCommentId').val() || null;
        const content = $('#message').val();

        if (!content.trim()) {
            showToast("Bạn chưa nhập nội dung bình luận.");
            return;
        }

        $.ajax({
            url: '/api/v1/add-comment',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                postId: parseInt(postId),
                parentCommentId: parentCommentId ? parseInt(parentCommentId) : null,
                content: content
            }),
            success: function (res) {
                if (res.success) {
                    Swal.fire({
                        title: 'Thành công!',
                        text: 'Bình luận đã được gửi!',
                        icon: 'success',
                        timer: 700,
                        showConfirmButton: false,
                        timerProgressBar: true
                    });
                    console.log(res.comment);
                    appendCommentToUI(res.comment);
                    $('#message').val('');
                    $('#parentCommentId').val('');
                } else {
                    showToast("Lỗi: " + res.message);
                }
            }
        });
    });

    $(document).on('click', '.reply', function (e) {
        e.preventDefault();

        const parentId = $(this).data('parent');
        const $commentElement = $(this).closest('.comment');

        if ($commentElement.find('.reply-form').length > 0) {
            $commentElement.find('.reply-form').remove();
            return;
        }
            
        $('.reply-form').remove();

        const replyFormHtml = `
            <div class="reply-form mt-2">
                <div class="form-group">
                    <textarea class="form-control" id="replyMessage" rows="2" placeholder="Nhập phản hồi..."></textarea>
                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-sm btn-primary py-1 px-3 send-reply-btn" data-parent-id="${parentId}">Gửi bình luận</button>
                </div>
            </div>
        `;

        $commentElement.append(replyFormHtml);
    });
    $(document).on('click', '.send-reply-btn', function () {
        const parentId = $(this).data('parent-id');
        const content = $('#replyMessage').val().trim();
        const postId = $('#postId').val();

        if (!content) {
            showToast("Vui lòng nhập nội dung bình luận.");
            return;
        }

        $.ajax({
            url: '/api/v1/add-comment',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                postId: postId,
                parentCommentId: parentId,
                content: content
            }),
            success: function (res) {
                if (res.success) {
                    Swal.fire("Thành công!", "Phản hồi đã được gửi.", "success");
                    appendCommentToUI(res.comment);
                    $('.reply-form').remove();
                } else {
                    showToast("Lỗi: " + res.message);
                }
            }
        });
    });

</script>
@Html.AntiForgeryToken()
<script src="~/js/common/show-toast.js"></script>
<script src="~/js/favorite-post/add-favorite.js"></script>